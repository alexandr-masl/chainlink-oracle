{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast": {
        "src": "@openzeppelin/contracts/utils/math/SafeCast.sol:19",
        "version": {
          "withMetadata": "f512e7af3d2588addfae4b653af8224c4e5bc685e12e14de69dd697a9f03069f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/ATestnetConsumer.sol:ATestnetConsumer": {
        "src": "contracts/ATestnetConsumer.sol:13",
        "version": {
          "withMetadata": "19bccad938efe41e4302d7ff4002f95229871320e4201ecde12cb153c5b02634",
          "withoutMetadata": "cd4293a2b62cc3bc75434f05bf0a879edbacb779a92e58b90b30d500b72387b1",
          "linkedWithoutMetadata": "cd4293a2b62cc3bc75434f05bf0a879edbacb779a92e58b90b30d500b72387b1"
        },
        "inherit": [
          "contracts/ConfirmedOwner.sol:ConfirmedOwner",
          "contracts/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "contracts/interfaces/IOwnable.sol:IOwnable",
          "contracts/ChainlinkClient.sol:ChainlinkClient"
        ],
        "libraries": [
          "contracts/Chainlink.sol:Chainlink"
        ],
        "methods": [
          "()",
          "requestEthereumPrice(address,string)",
          "fulfillEthereumPrice(bytes32,uint256)",
          "getChainlinkToken()",
          "withdrawLink()",
          "cancelRequest(bytes32,uint256,bytes4,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ATestnetConsumer",
            "src": "contracts/ATestnetConsumer.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_ens",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ENSInterface)4480",
              "contract": "ChainlinkClient",
              "src": "contracts/ChainlinkClient.sol:30"
            },
            {
              "label": "s_ensNode",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "ChainlinkClient",
              "src": "contracts/ChainlinkClient.sol:31"
            },
            {
              "label": "s_link",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(LinkTokenInterface)4628",
              "contract": "ChainlinkClient",
              "src": "contracts/ChainlinkClient.sol:32"
            },
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(OperatorInterface)4693",
              "contract": "ChainlinkClient",
              "src": "contracts/ChainlinkClient.sol:33"
            },
            {
              "label": "s_requestCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ChainlinkClient",
              "src": "contracts/ChainlinkClient.sol:34"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "ChainlinkClient",
              "src": "contracts/ChainlinkClient.sol:35"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "contracts/ConfirmedOwnerWithProposal.sol:9"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "contracts/ConfirmedOwnerWithProposal.sol:10"
            },
            {
              "label": "currentPrice",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "ATestnetConsumer",
              "src": "contracts/ATestnetConsumer.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ENSInterface)4480": {
              "label": "contract ENSInterface",
              "numberOfBytes": "20"
            },
            "t_contract(LinkTokenInterface)4628": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(OperatorInterface)4693": {
              "label": "contract OperatorInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/AuthorizedReceiver.sol:AuthorizedReceiver": {
        "src": "contracts/AuthorizedReceiver.sol:7",
        "inherit": [
          "contracts/interfaces/IAuthorizedReceiver.sol:IAuthorizedReceiver"
        ],
        "libraries": [],
        "methods": [
          "setAuthorizedSenders(address[])",
          "getAuthorizedSenders()",
          "isAuthorizedSender(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "s_authorizedSenders",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AuthorizedReceiver",
              "src": "contracts/AuthorizedReceiver.sol:8"
            },
            {
              "label": "s_authorizedSenderList",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "AuthorizedReceiver",
              "src": "contracts/AuthorizedReceiver.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/Chainlink.sol:Chainlink": {
        "src": "contracts/Chainlink.sol:11",
        "version": {
          "withMetadata": "b91473727bc6f593f378da2734491cc1a74b39fd998cf8bcc32b4a97ffe197ca",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/vendor/CBORChainlink.sol:CBORChainlink",
          "contracts/vendor/BufferChainlink.sol:BufferChainlink"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/ChainlinkClient.sol:ChainlinkClient": {
        "src": "contracts/ChainlinkClient.sol:18",
        "inherit": [],
        "libraries": [
          "contracts/Chainlink.sol:Chainlink"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "s_requestCount",
            "src": "contracts/ChainlinkClient.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_ens",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ENSInterface)4480",
              "contract": "ChainlinkClient",
              "src": "contracts/ChainlinkClient.sol:30"
            },
            {
              "label": "s_ensNode",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "ChainlinkClient",
              "src": "contracts/ChainlinkClient.sol:31"
            },
            {
              "label": "s_link",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(LinkTokenInterface)4628",
              "contract": "ChainlinkClient",
              "src": "contracts/ChainlinkClient.sol:32"
            },
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(OperatorInterface)4693",
              "contract": "ChainlinkClient",
              "src": "contracts/ChainlinkClient.sol:33"
            },
            {
              "label": "s_requestCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ChainlinkClient",
              "src": "contracts/ChainlinkClient.sol:34"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "ChainlinkClient",
              "src": "contracts/ChainlinkClient.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ENSInterface)4480": {
              "label": "contract ENSInterface",
              "numberOfBytes": "20"
            },
            "t_contract(LinkTokenInterface)4628": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(OperatorInterface)4693": {
              "label": "contract OperatorInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/ConfirmedOwner.sol:ConfirmedOwner": {
        "src": "contracts/ConfirmedOwner.sol:8",
        "version": {
          "withMetadata": "ecac43f67fe2271dfb4d1214c6a7b80475a98bee451733564766ecf7faa86348",
          "withoutMetadata": "c177258c8319f5fc35bb735ffb2feec3a40c793c45a6911755dfc04802a9e4ad",
          "linkedWithoutMetadata": "c177258c8319f5fc35bb735ffb2feec3a40c793c45a6911755dfc04802a9e4ad"
        },
        "inherit": [
          "contracts/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "contracts/interfaces/IOwnable.sol:IOwnable"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwner",
            "src": "contracts/ConfirmedOwner.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "contracts/ConfirmedOwnerWithProposal.sol:9"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "contracts/ConfirmedOwnerWithProposal.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal": {
        "src": "contracts/ConfirmedOwnerWithProposal.sol:8",
        "version": {
          "withMetadata": "44604ec9f30dab3e91b78f8615a94d08f3f13c65da84455704514d8c7dc51eca",
          "withoutMetadata": "13b89779c0aceeef6b78c3d8eca277a60f74e97ae91ccc7b990dbf29b18ec7fb",
          "linkedWithoutMetadata": "13b89779c0aceeef6b78c3d8eca277a60f74e97ae91ccc7b990dbf29b18ec7fb"
        },
        "inherit": [
          "contracts/interfaces/IOwnable.sol:IOwnable"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "transferOwnership(address)",
          "acceptOwnership()",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwnerWithProposal",
            "src": "contracts/ConfirmedOwnerWithProposal.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "contracts/ConfirmedOwnerWithProposal.sol:9"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "contracts/ConfirmedOwnerWithProposal.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/LinkTokenReceiver.sol:LinkTokenReceiver": {
        "src": "contracts/LinkTokenReceiver.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onTokenTransfer(address,uint256,bytes)",
          "getChainlinkToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/LinkTokenReceiver.sol:24"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/Operator.sol:Operator": {
        "src": "contracts/Operator.sol:18",
        "version": {
          "withMetadata": "79d1314044e875b342ddd48351a502c322c6ca27693d3d71b392b9c73ccabc42",
          "withoutMetadata": "4853a7b4d2a4bce6c1cecd1602c6f8e6bdfac1ddf2326372ffe2d20ad4381bf9",
          "linkedWithoutMetadata": "4853a7b4d2a4bce6c1cecd1602c6f8e6bdfac1ddf2326372ffe2d20ad4381bf9"
        },
        "inherit": [
          "contracts/interfaces/IWithdrawal.sol:IWithdrawal",
          "contracts/interfaces/OperatorInterface.sol:OperatorInterface",
          "contracts/interfaces/ChainlinkRequestInterface.sol:ChainlinkRequestInterface",
          "contracts/interfaces/OracleInterface.sol:OracleInterface",
          "contracts/LinkTokenReceiver.sol:LinkTokenReceiver",
          "contracts/ConfirmedOwner.sol:ConfirmedOwner",
          "contracts/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "contracts/interfaces/IOwnable.sol:IOwnable",
          "contracts/AuthorizedReceiver.sol:AuthorizedReceiver",
          "contracts/interfaces/IAuthorizedReceiver.sol:IAuthorizedReceiver"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast"
        ],
        "methods": [
          "(address,address)",
          "oracleRequest(address,uint256,bytes32,address,bytes4,uint256,uint256,bytes)",
          "operatorRequest(address,uint256,bytes32,bytes4,uint256,uint256,bytes)",
          "fulfillOracleRequest(bytes32,uint256,address,bytes4,uint256,bytes32)",
          "fulfillOracleRequest2(bytes32,uint256,address,bytes4,uint256,bytes)",
          "transferOwnableContracts(address[],address)",
          "acceptOwnableContracts(address[])",
          "setAuthorizedSendersOn(address[],address[])",
          "acceptAuthorizedReceivers(address[],address[])",
          "withdraw(address,uint256)",
          "withdrawable()",
          "ownerForward(address,bytes)",
          "ownerTransferAndCall(address,uint256,bytes)",
          "distributeFunds(address payable[],uint256[])",
          "cancelOracleRequest(bytes32,uint256,bytes4,uint256)",
          "cancelOracleRequestByRequester(uint256,uint256,bytes4,uint256)",
          "getChainlinkToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Operator",
            "src": "contracts/Operator.sol:68"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/LinkTokenReceiver.sol:24"
          },
          {
            "kind": "state-variable-immutable",
            "name": "i_linkToken",
            "src": "contracts/Operator.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "s_tokensInEscrow",
            "src": "contracts/Operator.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_authorizedSenders",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AuthorizedReceiver",
              "src": "contracts/AuthorizedReceiver.sol:8"
            },
            {
              "label": "s_authorizedSenderList",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "AuthorizedReceiver",
              "src": "contracts/AuthorizedReceiver.sol:9"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "contracts/ConfirmedOwnerWithProposal.sol:9"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "contracts/ConfirmedOwnerWithProposal.sol:10"
            },
            {
              "label": "s_commitments",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_bytes32,t_struct(Commitment)3288_storage)",
              "contract": "Operator",
              "src": "contracts/Operator.sol:39"
            },
            {
              "label": "s_owned",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Operator",
              "src": "contracts/Operator.sol:40"
            },
            {
              "label": "s_tokensInEscrow",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Operator",
              "src": "contracts/Operator.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes31": {
              "label": "bytes31",
              "numberOfBytes": "31"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Commitment)3288_storage)": {
              "label": "mapping(bytes32 => struct Operator.Commitment)",
              "numberOfBytes": "32"
            },
            "t_struct(Commitment)3288_storage": {
              "label": "struct Operator.Commitment",
              "members": [
                {
                  "label": "paramsHash",
                  "type": "t_bytes31",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "dataVersion",
                  "type": "t_uint8",
                  "offset": 31,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ChainlinkRequestInterface.sol:ChainlinkRequestInterface": {
        "src": "contracts/interfaces/ChainlinkRequestInterface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "oracleRequest(address,uint256,bytes32,address,bytes4,uint256,uint256,bytes)",
          "cancelOracleRequest(bytes32,uint256,bytes4,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ENSInterface.sol:ENSInterface": {
        "src": "contracts/interfaces/ENSInterface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/IAuthorizedReceiver.sol:IAuthorizedReceiver": {
        "src": "contracts/interfaces/IAuthorizedReceiver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isAuthorizedSender(address)",
          "getAuthorizedSenders()",
          "setAuthorizedSenders(address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/IOwnable.sol:IOwnable": {
        "src": "contracts/interfaces/IOwnable.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/IWithdrawal.sol:IWithdrawal": {
        "src": "contracts/interfaces/IWithdrawal.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "withdraw(address,uint256)",
          "withdrawable()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/LinkTokenInterface.sol:LinkTokenInterface": {
        "src": "contracts/interfaces/LinkTokenInterface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/OperatorInterface.sol:OperatorInterface": {
        "src": "contracts/interfaces/OperatorInterface.sol:8",
        "inherit": [
          "contracts/interfaces/ChainlinkRequestInterface.sol:ChainlinkRequestInterface",
          "contracts/interfaces/OracleInterface.sol:OracleInterface"
        ],
        "libraries": [],
        "methods": [
          "operatorRequest(address,uint256,bytes32,bytes4,uint256,uint256,bytes)",
          "fulfillOracleRequest2(bytes32,uint256,address,bytes4,uint256,bytes)",
          "ownerTransferAndCall(address,uint256,bytes)",
          "distributeFunds(address payable[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/OracleInterface.sol:OracleInterface": {
        "src": "contracts/interfaces/OracleInterface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "fulfillOracleRequest(bytes32,uint256,address,bytes4,uint256,bytes32)",
          "withdraw(address,uint256)",
          "withdrawable()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/PointerInterface.sol:PointerInterface": {
        "src": "contracts/interfaces/PointerInterface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/vendor/BufferChainlink.sol:BufferChainlink": {
        "src": "contracts/vendor/BufferChainlink.sol:12",
        "version": {
          "withMetadata": "98cac99cf57db81d1046a9041275798b8097a8b671d5079fc56d7d6d13f68120",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/vendor/CBORChainlink.sol:CBORChainlink": {
        "src": "contracts/vendor/CBORChainlink.sol:6",
        "version": {
          "withMetadata": "d4e7f0217e9f00a7505b5592360d889e8be95f85c98d6671107a6b34a98ebb65",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/vendor/BufferChainlink.sol:BufferChainlink"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/vendor/ENSResolver.sol:ENSResolver": {
        "src": "contracts/vendor/ENSResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addr(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      }
    }
  ]
}